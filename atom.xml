<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Noodles的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-03-16T14:45:26.362Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>noodles</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>webpack2-coreConcept5-hmr&amp;babel</title>
    <link href="http://example.com/2022/03/16/webpack2-coreConcept5-hmr&amp;babel/"/>
    <id>http://example.com/2022/03/16/webpack2-coreConcept5-hmr&amp;babel/</id>
    <published>2022-03-16T12:53:19.000Z</published>
    <updated>2022-03-16T14:45:26.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心概念篇5"><a href="#核心概念篇5" class="headerlink" title="核心概念篇5"></a>核心概念篇5</h1><h2 id="1-热模块更新HMR"><a href="#1-热模块更新HMR" class="headerlink" title="1. 热模块更新HMR"></a>1. 热模块更新HMR</h2><ul><li>Since webpack-dev-server v4.0.0, Hot Module Replacement is enabled by default.<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    mode: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">    devtool: <span class="string">&#x27;cheap-module-source-map&#x27;</span>,</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        <span class="keyword">static</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">        open: <span class="literal">true</span>,</span><br><span class="line">        hot: <span class="string">&#x27;only&#x27;</span></span><br><span class="line">        <span class="comment">// hot: false</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">module</span>.hot) &#123;</span><br><span class="line">    <span class="built_in">module</span>.hot.accept(<span class="string">&#x27;./number.js&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">document</span>.body.removeChild(<span class="built_in">document</span>.getElementById(<span class="string">&#x27;number&#x27;</span>))</span><br><span class="line">        number()</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-babel"><a href="#2-babel" class="headerlink" title="2. babel"></a>2. babel</h2><ol><li>业务代码，webpack-rules配置示例:<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.m?js$/</span>,</span><br><span class="line">    exclude: <span class="regexp">/node_modules/</span>,</span><br><span class="line">    use: &#123;</span><br><span class="line">        loader: <span class="string">&quot;babel-loader&quot;</span>,</span><br><span class="line">        options: &#123;</span><br><span class="line">            presets: [[<span class="string">&#x27;@babel/preset-env&#x27;</span>, &#123;</span><br><span class="line">                targets: &#123;</span><br><span class="line">                    chrome: <span class="string">&quot;67&quot;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">                useBuiltIns: <span class="string">&quot;usage&quot;</span>,</span><br><span class="line">            &#125;]]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><code>babel-loader</code> =&gt; 帮助webpack打包的工具</li><li><code>@babel/core</code> =&gt; 帮助babel识别js代码  =》 AST(抽象语法树) =&gt; 转换代码</li><li><code>@babel/preset-env</code> =&gt; babel-loader处理js文件时,他是babel和webpack通信的桥梁（将babel和webpack进行了打通）,但是并不会把es12等js最新语法翻译为es5等浏览器已经支持的语法,而@babel/preset-env就是进行翻译的模块（包含了最新语法的翻译规则）<ul><li><code>useBuiltIns: &quot;usage&quot;;</code>  表示做polyfill填充时,只补充业务代码用到新语法特性的实现</li><li><code>targets: &#123; chrome: &quot;67&quot; &#125;;</code> 表示项目会运行在版本大于67的chrome浏览器中,进行polyfill填充时会以此为参考来判断填充哪些特性的实现</li></ul></li><li><code>@babel/polyfill</code>：某些旧版浏览器可能没有map、promise这些方法或者对象的定义，所以我们需要对这些定义进行补充翻译，polyfill就是做这件事情的</li></ul><ol start="2"><li>封装组件库、类库<br>业务代码，webpack-rules配置示例: <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// note: 业务代码的配置</span></span><br><span class="line">    <span class="comment">// presets: [</span></span><br><span class="line">    <span class="comment">//     [&#x27;@babel/preset-env&#x27;, &#123;</span></span><br><span class="line">    <span class="comment">//         targets: &#123;</span></span><br><span class="line">    <span class="comment">//             &quot;chrome&quot;: &quot;67&quot;</span></span><br><span class="line">    <span class="comment">//         &#125;,</span></span><br><span class="line">    <span class="comment">//         useBuiltIns: &quot;usage&quot;,</span></span><br><span class="line">    <span class="comment">//     &#125;]</span></span><br><span class="line">    <span class="comment">// ]</span></span><br><span class="line">    <span class="comment">// note: 类库代码的配置</span></span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: [</span><br><span class="line">        [<span class="string">&quot;@babel/plugin-transform-runtime&quot;</span>, &#123;</span><br><span class="line">            <span class="string">&quot;absoluteRuntime&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&quot;corejs&quot;</span>: <span class="number">2</span>,</span><br><span class="line">            <span class="string">&quot;helpers&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;regenerator&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;version&quot;</span>: <span class="string">&quot;7.0.0-beta.0&quot;</span></span><br><span class="line">        &#125;]</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li><p>封住组件库、类库的时候，使用polyfill不合适，以为polyfill是将实现挂载至全局变量中的，会造成污染</p></li><li><p><code>@babel/plugin-transform-runtime</code> 以闭包形式引入</p></li><li><p><code>@babel/runtime</code></p></li><li><p><code>@babel/runtime-corejs2</code></p></li><li><p>可以新建一个<code>.babelrc</code>文件,并将配置拿出来放到里面</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;核心概念篇5&quot;&gt;&lt;a href=&quot;#核心概念篇5&quot; class=&quot;headerlink&quot; title=&quot;核心概念篇5&quot;&gt;&lt;/a&gt;核心概念篇5&lt;/h1&gt;&lt;h2 id=&quot;1-热模块更新HMR&quot;&gt;&lt;a href=&quot;#1-热模块更新HMR&quot; class=&quot;headerli</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>webpack2-coreConcept4-devServer</title>
    <link href="http://example.com/2022/03/15/webpack2-coreConcept4-devServer/"/>
    <id>http://example.com/2022/03/15/webpack2-coreConcept4-devServer/</id>
    <published>2022-03-15T14:24:24.000Z</published>
    <updated>2022-03-15T15:11:49.145Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心概念篇4"><a href="#核心概念篇4" class="headerlink" title="核心概念篇4"></a>核心概念篇4</h1><h2 id="devServer"><a href="#devServer" class="headerlink" title="devServer"></a>devServer</h2><h3 id="1-监听文件的方式"><a href="#1-监听文件的方式" class="headerlink" title="1. 监听文件的方式"></a>1. 监听文件的方式</h3><ol><li>webpack –watch<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">  <span class="string">&quot;watch&quot;</span>: <span class="string">&quot;webpack --watch&quot;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><a id="more"></a></li></ol><ul><li>代码变化-&gt;webpack重新打包-&gt;刷新页面，显示结果</li></ul><ol start="2"><li>webpack-dev-server<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        <span class="keyword">static</span>: <span class="string">&#x27;./dist&#x27;</span>,</span><br><span class="line">        open: <span class="literal">true</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>devServer.static<ul><li>修改代码,自动重新打包,自动刷新浏览器页面</li><li>安装webpack-dev-server,运行一个web http服务器 </li><li>http服务的映射目录为./dist</li><li>命令行运行: webpack-dev-server</li></ul></li><li>devServer.open: true<ul><li>服务运行起来,自动在浏览器打开页面</li></ul></li><li>devServer.proxy<ul><li>跨域请求代理转发</li></ul></li></ul><ol start="3"><li>自己实现server创建服务器-在node中使用webpack</li></ol><ul><li><p>借助express,webpack-dev-middleware</p></li><li><p>将webpack的配置文件传递给webpack的cli(客户端),拿到返回结果(一个编译器)</p></li><li><p>将得到的编译器传递给webpackDevMiddleware,并应用到node服务中即可</p></li><li><p>Documentation-API-Node Interface</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> webpackDevMiddleware = <span class="built_in">require</span>(<span class="string">&#x27;webpack-dev-middleware&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> config = <span class="built_in">require</span>(<span class="string">&#x27;./webpack.config.js&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// note:编译器执行一次，会重新打包一次代码</span></span><br><span class="line"><span class="keyword">const</span> complier = webpack(config)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="keyword">new</span> express()</span><br><span class="line">app.use(webpackDevMiddleware(complier, &#123;&#125;))</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">3000</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;server is running&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>Documentation-Guides-Development</p></li><li><p>Documentation-Configuration-DevServer</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心概念篇4&quot;&gt;&lt;a href=&quot;#核心概念篇4&quot; class=&quot;headerlink&quot; title=&quot;核心概念篇4&quot;&gt;&lt;/a&gt;核心概念篇4&lt;/h1&gt;&lt;h2 id=&quot;devServer&quot;&gt;&lt;a href=&quot;#devServer&quot; class=&quot;headerlink&quot; title=&quot;devServer&quot;&gt;&lt;/a&gt;devServer&lt;/h2&gt;&lt;h3 id=&quot;1-监听文件的方式&quot;&gt;&lt;a href=&quot;#1-监听文件的方式&quot; class=&quot;headerlink&quot; title=&quot;1. 监听文件的方式&quot;&gt;&lt;/a&gt;1. 监听文件的方式&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;webpack –watch&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;&amp;quot;scripts&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;quot;watch&amp;quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&amp;quot;webpack --watch&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>webpack2-coreConcept3</title>
    <link href="http://example.com/2022/03/15/webpack2-coreConcept3/"/>
    <id>http://example.com/2022/03/15/webpack2-coreConcept3/</id>
    <published>2022-03-15T13:38:13.000Z</published>
    <updated>2022-03-15T14:23:49.469Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心概念篇3"><a href="#核心概念篇3" class="headerlink" title="核心概念篇3"></a>核心概念篇3</h1><h2 id="sourceMap"><a href="#sourceMap" class="headerlink" title="sourceMap"></a>sourceMap</h2><h3 id="1-啥是source"><a href="#1-啥是source" class="headerlink" title="1. 啥是source"></a>1. 啥是source</h3><a id="more"></a><ul><li>现在知道dist目录下main.js文件第96行出错</li><li>souceMap 它是一个映射关系，它知道dist目录下main.js文件96行，实际上对应的是src目录下index.js文件中的第一行</li><li>当前其它是index.js中第一行代码出错了</li></ul><h3 id="2-配置项"><a href="#2-配置项" class="headerlink" title="2.配置项"></a>2.配置项</h3><ul><li>mode: ‘development’; 开发者模式时，sourceMap默认已经开启</li><li>devtool: false; 可以关闭sourceMap</li></ul><h3 id="3-devtool可填值"><a href="#3-devtool可填值" class="headerlink" title="3.devtool可填值"></a>3.devtool可填值</h3><ol><li>source-map</li></ol><ul><li>dist目录下会生成main.js.map-打包代码和源码的映射关系</li></ul><ol start="2"><li>inline-source-map</li></ol><ul><li>main.js.map会被变成一个base64的字符串写到main.js文件中</li></ul><ol start="3"><li>inline-cheap(-module)-source-map</li></ol><ul><li>不加cheap,报错会精确到哪行的哪个字符（哪里）错了</li><li>加了cheap,报错只会精确到行</li><li>加了cheap,会忽略第三方插件、lodaer的报错地方,只管我们自己的业务代码<ul><li>加了module,那么也会映射第三方插件、loader报错的地方</li></ul></li></ul><ol start="4"><li>eval</li></ol><ul><li>速度最快，性能最好</li><li>通过eval生成的映射关系</li><li>针对比较复杂代码，eval提示出来的错误可能并不全面</li></ul><h3 id="4-推荐的配置"><a href="#4-推荐的配置" class="headerlink" title="4.推荐的配置"></a>4.推荐的配置</h3><ul><li>开发环境  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mode: <span class="string">&#x27;development&#x27;</span>,</span><br><span class="line">devtool: <span class="built_in">eval</span>-cheap-<span class="built_in">module</span>-source-map</span><br></pre></td></tr></table></figure><ul><li>提示信息较全，打包速度也比较快</li></ul></li><li>生产环境  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mode: <span class="string">&#x27;production&#x27;</span>,</span><br><span class="line">devtool: cheap-<span class="built_in">module</span>-source-map</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心概念篇3&quot;&gt;&lt;a href=&quot;#核心概念篇3&quot; class=&quot;headerlink&quot; title=&quot;核心概念篇3&quot;&gt;&lt;/a&gt;核心概念篇3&lt;/h1&gt;&lt;h2 id=&quot;sourceMap&quot;&gt;&lt;a href=&quot;#sourceMap&quot; class=&quot;headerlink&quot; title=&quot;sourceMap&quot;&gt;&lt;/a&gt;sourceMap&lt;/h2&gt;&lt;h3 id=&quot;1-啥是source&quot;&gt;&lt;a href=&quot;#1-啥是source&quot; class=&quot;headerlink&quot; title=&quot;1. 啥是source&quot;&gt;&lt;/a&gt;1. 啥是source&lt;/h3&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>webpack2-coreConcept2</title>
    <link href="http://example.com/2022/03/15/webpack2-coreConcept2/"/>
    <id>http://example.com/2022/03/15/webpack2-coreConcept2/</id>
    <published>2022-03-15T12:33:59.000Z</published>
    <updated>2022-03-15T13:33:34.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心概念篇2"><a href="#核心概念篇2" class="headerlink" title="核心概念篇2"></a>核心概念篇2</h1><h2 id="1-Plugins"><a href="#1-Plugins" class="headerlink" title="1. Plugins"></a>1. Plugins</h2><ul><li>plugin可以在webpack运行到某个时刻时，帮你做一些事情<a id="more"></a></li></ul><h3 id="1-1-HtmlWebpackPlugin"><a href="#1-1-HtmlWebpackPlugin" class="headerlink" title="1.1. HtmlWebpackPlugin"></a>1.1. HtmlWebpackPlugin</h3><ul><li>会在打包结束后，自动生成一个html文件，并把打包生成的js自动引入到这个html文件</li><li>参数template: 可以指定模板来生成html</li></ul><h3 id="1-2-CleanWebpackPlugin"><a href="#1-2-CleanWebpackPlugin" class="headerlink" title="1.2. CleanWebpackPlugin"></a>1.2. CleanWebpackPlugin</h3><ul><li>自动清理打包生成的文件夹</li></ul><h2 id="2-entry-amp-output"><a href="#2-entry-amp-output" class="headerlink" title="2. entry &amp; output"></a>2. entry &amp; output</h2><h3 id="2-1-entry"><a href="#2-1-entry" class="headerlink" title="2.1 entry"></a>2.1 entry</h3><ul><li>打包入口文件</li><li>示例：  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">entry: &#123;</span><br><span class="line">    main: <span class="string">&#x27;./src/index.js&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>表示要打包入口为’./src/index.js’</li><li>打包生成的默认文件名称为main.js(可以在output中filename来改变输出文件名称)</li></ul></li></ul><h3 id="2-2-output"><a href="#2-2-output" class="headerlink" title="2.2 output"></a>2.2 output</h3><ul><li>示例:  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    entry: &#123;</span><br><span class="line">        main: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">        sub: <span class="string">&#x27;./src/index.js&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    ...,</span><br><span class="line">    output: &#123;</span><br><span class="line">        filename: <span class="string">&#x27;[name].js&#x27;</span>,</span><br><span class="line">        path: path.resolve(__dirname, <span class="string">&#x27;dist&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>output.filename中<code>[name]</code>为占位符，分别对应到entry中的main和sub</li><li>会打包生成两个文件:main.js、sub.js</li></ul></li><li>output.publicPath<ul><li>引入到html中的js文件路径,前面都会加上配置的publicPath</li><li>输出示例:<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;http://cdn.com/main.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span> <span class="attr">defer</span> <span class="attr">src</span>=<span class="string">&quot;http://cdn.com/sub.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是网页<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span> </span><br></pre></td></tr></table></figure></li></ul></li><li>Documentation-Configuration-Output/Entry and Context</li><li>Documentation-Guides-Output Management</li><li>Documentation-Plugins-HtmlWebpackPlugin</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心概念篇2&quot;&gt;&lt;a href=&quot;#核心概念篇2&quot; class=&quot;headerlink&quot; title=&quot;核心概念篇2&quot;&gt;&lt;/a&gt;核心概念篇2&lt;/h1&gt;&lt;h2 id=&quot;1-Plugins&quot;&gt;&lt;a href=&quot;#1-Plugins&quot; class=&quot;headerlink&quot; title=&quot;1. Plugins&quot;&gt;&lt;/a&gt;1. Plugins&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;plugin可以在webpack运行到某个时刻时，帮你做一些事情</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>webpack2-coreConcept1-loader</title>
    <link href="http://example.com/2022/03/10/webpack2-coreConcept1-loader/"/>
    <id>http://example.com/2022/03/10/webpack2-coreConcept1-loader/</id>
    <published>2022-03-10T13:48:12.000Z</published>
    <updated>2022-03-15T12:33:47.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="核心概念篇"><a href="#核心概念篇" class="headerlink" title="核心概念篇"></a>核心概念篇</h1><h2 id="1-啥是Loader"><a href="#1-啥是Loader" class="headerlink" title="1.啥是Loader"></a>1.啥是Loader</h2><a id="more"></a><ul><li>webpack可以打包图片等，但是需要合适的loader(file-loader)</li><li>在webpack.config.js中配置 module.rules(Array)</li><li>file-loader:<ul><li>把静态资源一定到打包目录下</li><li>讲静态资源名称返回给变量</li></ul></li><li>vue文件也需要vue-loader<blockquote><p>webpack不能识别非js结尾的文件，配置loader规则后，loader提供方案和规则给webpack进行识别打包</p></blockquote></li></ul><h2 id="2-静态资源打包-图片"><a href="#2-静态资源打包-图片" class="headerlink" title="2.静态资源打包-图片"></a>2.静态资源打包-图片</h2><ol><li>file-loader</li></ol><ul><li>module.rules.[].options:<ul><li>name: ‘[name]_[hash].[ext]’ // 占位符，更多预置占位符可参考loader使用说明</li><li>outputPath: ‘images/‘ // 文件打包输出的位置</li></ul></li></ul><ol start="2"><li>url-loader</li></ol><ul><li>将图片转换成一个base64的字符串，并嵌入代码中</li><li>配置项<ul><li>limit: 2048  大于2kb的时候打包成文件,小于2kb的时候嵌入页面</li></ul></li></ul><h2 id="3-静态资源打包-样式"><a href="#3-静态资源打包-样式" class="headerlink" title="3.静态资源打包-样式"></a>3.静态资源打包-样式</h2><ol><li>css-loader</li></ol><ul><li>分析css文件之间的关系，进行合并关联</li><li>配置项<ul><li>importLoaders: 2, 通过import嵌套引入的scss文件，也要执行loaders</li><li>modules: true 开启<code>css模块化</code>打包<ul><li><pre><code class="javascript">  // note: 模块化css,引入的样式不会影响到createAvatar中图片的样式  import style from &#39;./index.scss&#39;  ...  img.classList.add(style.avatar)  <figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">``` css</span><br><span class="line"><span class="comment">// 打包结果</span></span><br><span class="line"><span class="selector-tag">body</span> <span class="selector-class">.sr2ElEIZriKWsZCEHdXE</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">transform</span>: translate(<span class="number">100px</span>, <span class="number">100px</span>);</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">10px</span> <span class="number">10px</span> <span class="number">5px</span> <span class="number">#888888</span>;</span><br><span class="line">    -o-<span class="selector-tag">object</span>-fit: fill;</span><br><span class="line">    <span class="selector-tag">object</span>-fit: fill;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></code></pre></li></ul></li></ul></li></ul><ol start="2"><li>style-loader</li></ol><ul><li>将css-loader得到的东西挂载到页面的<head></head>部分</li></ul><ol start="3"><li>sass-loader node-sass</li></ol><ul><li>处理scss样式文件</li></ul><ol start="4"><li>postcss-loader</li></ol><ul><li></li><li>plugins:<ul><li>autoprefixer: css属性前面自动增加厂商前缀</li></ul></li></ul><ol start="5"><li>loader的调用顺序<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.scss$/</span>,</span><br><span class="line">    use: [</span><br><span class="line">        <span class="string">&#x27;style-loader&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;css-loader&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;sass-loader&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;postcss-loader&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>从下往上，从右向左（先执行sass-loader,然后是css-loader,然后是style-loader）</li><li>前者的输出是后者的输入</li></ul><ol start="6"><li>打包字体文件<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    test: <span class="regexp">/\.(ttf|woff|woff2)$/</span>,</span><br><span class="line">    type: <span class="string">&#x27;asset/resource&#x27;</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure></li><li>Documentation-Guides-Asset Management;<br>Documentation-Loaders-scss-loader/style-loader/css-loader;</li></ol>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;核心概念篇&quot;&gt;&lt;a href=&quot;#核心概念篇&quot; class=&quot;headerlink&quot; title=&quot;核心概念篇&quot;&gt;&lt;/a&gt;核心概念篇&lt;/h1&gt;&lt;h2 id=&quot;1-啥是Loader&quot;&gt;&lt;a href=&quot;#1-啥是Loader&quot; class=&quot;headerlink&quot; title=&quot;1.啥是Loader&quot;&gt;&lt;/a&gt;1.啥是Loader&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>webpack1-basic</title>
    <link href="http://example.com/2022/03/06/webpack1-basic/"/>
    <id>http://example.com/2022/03/06/webpack1-basic/</id>
    <published>2022-03-06T09:40:10.000Z</published>
    <updated>2022-03-10T13:57:35.438Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h1><h2 id="1-啥是webapck"><a href="#1-啥是webapck" class="headerlink" title="1.啥是webapck"></a>1.啥是webapck</h2><a id="more"></a><ol><li>模块打包工具（Modules Bundle），可识别</li></ol><ul><li>ES Moudule模块的引入(import)导出(export)工具、</li><li>CmmonJS模块引入规范（NodeJs的导入导出，require、module.exports）、</li><li>AMD、CMD等语法</li></ul><ol start="2"><li>js 模块打包工具 —升级进化—&gt; png, css打包工具</li><li>webpack官网，CONCEPTS-Modules, API-Module Variables</li></ol><h2 id="2-webpack的安装"><a href="#2-webpack的安装" class="headerlink" title="2.webpack的安装"></a>2.webpack的安装</h2><ul><li>安装nodejs</li><li>创建项目<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init</span><br></pre></td></tr></table></figure></li><li>(第一种)全局安装webpack-cli<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install webpack-cli -g</span><br><span class="line">&gt; webpack -v 检查版本</span><br></pre></td></tr></table></figure></li><li>(第二种)项目局部安装<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install webpack webpack-cli -D(--save-dev)</span><br></pre></td></tr></table></figure><blockquote><ul><li>webpack：直接输入webpack 会去全局环境中检索webpack命令</li><li><code>npx webapck</code>：在当前目录的node_modules中检索webpack</li></ul></blockquote></li></ul><h2 id="3-webpack-config-js"><a href="#3-webpack-config-js" class="headerlink" title="3.webpack.config.js"></a>3.webpack.config.js</h2><ol><li>文件配置项(此文件不存在时,会有默认的配置项)</li></ol><ul><li>entry: 打包入口</li><li>output: 打包的文件的配置<ul><li>filename: 输出文件的名称</li><li>path: 输出文件放置在哪个文件夹（绝对路径）</li></ul></li></ul><ol start="2"><li>使用其他文件作为打包配置文件<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npx webpack --config webpackconfig.js</span><br></pre></td></tr></table></figure></li><li>npm script<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span>.<span class="attr">json:</span></span><br><span class="line"><span class="attr">scripts:</span> &#123; <span class="string">&quot;bundle&quot;</span>: <span class="string">&quot;webpack&quot;</span> &#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>运行npm run bundle时，执行的是scripts下面的bundle,会先调用npx webpack,如果没有会去运行webpack（寻找全局的webpack）</li></ul><ol start="4"><li>webpack-cli</li></ol><ul><li>使得我们可以在命令行中使用<code>webpack</code>这个命令</li></ul><ol start="5"><li>webpack官网，DOCUMENTATION-Getting Started</li></ol><h2 id="4-打包输出内容浅析"><a href="#4-打包输出内容浅析" class="headerlink" title="4.打包输出内容浅析"></a>4.打包输出内容浅析</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">➜  webpack01 git:(master) ✗ npm run bundle</span><br><span class="line"></span><br><span class="line">&gt; webpack01@1.0.0 bundle /Users/noodles/Documents/project/noodles/webpack_memo/webpack01</span><br><span class="line">&gt; webpack</span><br><span class="line"></span><br><span class="line">asset bundle.js 143 bytes [emitted] [minimized] (name: main)</span><br><span class="line">orphan modules 197 bytes [orphan] 1 module</span><br><span class="line">./src/index.js + 1 modules 328 bytes [built] [code generated]</span><br><span class="line"></span><br><span class="line">WARNING <span class="keyword">in</span> configuration</span><br><span class="line">The <span class="string">&#x27;mode&#x27;</span> option has not been <span class="built_in">set</span>, webpack will fallback to <span class="string">&#x27;production&#x27;</span> <span class="keyword">for</span> this value.</span><br><span class="line">Set <span class="string">&#x27;mode&#x27;</span> option to <span class="string">&#x27;development&#x27;</span> or <span class="string">&#x27;production&#x27;</span> to <span class="built_in">enable</span> defaults <span class="keyword">for</span> each environment.</span><br><span class="line">You can also <span class="built_in">set</span> it to <span class="string">&#x27;none&#x27;</span> to <span class="built_in">disable</span> any default behavior. Learn more: https://webpack.js.org/configuration/mode/</span><br><span class="line"></span><br><span class="line">webpack 5.70.0 compiled with 1 warning <span class="keyword">in</span> 217 ms</span><br></pre></td></tr></table></figure><ul><li>entry: ‘’ === entry: { main: ‘’ }</li><li>webpack.config.js中mode默认是’production’</li><li>mode: ‘production’  代码不会被压缩<br>mode: ‘development’ 代码不会被压缩</li></ul>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;基础篇&quot;&gt;&lt;a href=&quot;#基础篇&quot; class=&quot;headerlink&quot; title=&quot;基础篇&quot;&gt;&lt;/a&gt;基础篇&lt;/h1&gt;&lt;h2 id=&quot;1-啥是webapck&quot;&gt;&lt;a href=&quot;#1-啥是webapck&quot; class=&quot;headerlink&quot; title=&quot;1.啥是webapck&quot;&gt;&lt;/a&gt;1.啥是webapck&lt;/h2&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://example.com/2019/02/02/markdown/"/>
    <id>http://example.com/2019/02/02/markdown/</id>
    <published>2019-02-02T06:22:02.000Z</published>
    <updated>2020-11-13T03:59:22.220Z</updated>
    
    <content type="html"><![CDATA[<h1 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h1><p>[TOC]</p><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><a id="more"></a><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><hr><h3 id="块的几种方式"><a href="#块的几种方式" class="headerlink" title="块的几种方式"></a>块的几种方式</h3><dl><dt>第一种</dt><dd>定义型</dd></dl><pre><code>    这是第一种</code></pre><p>第二种</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是第二种</span><br></pre></td></tr></table></figure><p>第三种</p><blockquote><p>这是第三种</p><ul><li>这是第三种</li></ul></blockquote><p>第四种</p><p><code>同行显示</code> <code>关键字</code></p><p>第五种</p><pre><code>开头加四个空格(1个tab)</code></pre><hr><h3 id="测试一下"><a href="#测试一下" class="headerlink" title="测试一下"></a>测试一下</h3><blockquote><ul><li>这是一个测试</li><li>这是第二个测试</li></ul></blockquote><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">console</span>.log(a)</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># java code</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">people</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> string name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TO-DO"><a href="#TO-DO" class="headerlink" title="TO-DO"></a>TO-DO</h3><ul><li><input checked="" disabled="" type="checkbox"> 项目一</li><li><input disabled="" type="checkbox"> 项目二</li></ul><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><table><thead><tr><th align="left">Item</th><th align="right">Value</th><th align="center">Key</th></tr></thead><tbody><tr><td align="left">compute</td><td align="right">1</td><td align="center">1</td></tr><tr><td align="left">phone</td><td align="right">2</td><td align="center">2</td></tr><tr><td align="left">pad</td><td align="right">3</td><td align="center">3</td></tr></tbody></table><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><ul><li>1<ul><li>1.1 </li></ul></li><li>2</li><li>3</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><ol><li>列表1<ol><li>列表1.1</li></ol></li><li>列表2</li></ol><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><blockquote><p>嘤嘤嘤。 –盲流子语录</p></blockquote><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p><em>这是斜体</em><br><strong>这是粗体</strong><br><strong><em>斜体加粗</em></strong><br><del>删除线</del></p><h3 id="插入链接"><a href="#插入链接" class="headerlink" title="插入链接"></a>插入链接</h3><p><a href="http://www.baidu.com/">有道云笔记</a></p><h3 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h3><p><img src="http://note.youdao.com/favicon.ico" alt="有道云笔记"></p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p><font size=4>第一段</p><hr><p>第&emsp;二段<br>第&ensp;二段<br><br>第二段</p><h3 id="分层"><a href="#分层" class="headerlink" title="分层"></a>分层</h3><blockquote><p>hello world</p><blockquote><p>hello world</p></blockquote></blockquote><h3 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h3><p><code>关键字1</code> <code>关键字2</code></p><h3 id="定义型列表"><a href="#定义型列表" class="headerlink" title="定义型列表"></a><a href="#%E5%BC%95%E7%94%A8">定义型列表</a></h3><dl><dt>Markdown</dt><dd>轻量级文本标记语言</dd></dl><dl><dt>代码块定义</dt><dd>代码块定义</dd></dl><pre><code>    var a=10</code></pre><h3 id="脚注"><a href="#脚注" class="headerlink" title="脚注"></a>脚注</h3><p>Markdown[^1]<br>[^1]:Markdown是一种纯文本标记语言</p><h3 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h3><p><code>$y=x^2$</code></p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">graph</span> TD</span><br><span class="line">    <span class="attribute">A</span>[<span class="number">1</span>] --&gt; B[<span class="number">2</span>]</span><br><span class="line">    <span class="attribute">B</span> --&gt; C(<span class="number">3</span>)</span><br><span class="line">    <span class="attribute">C</span> --&gt; D&#123;<span class="number">4</span>&#125;</span><br><span class="line">    <span class="attribute">D</span> --&gt; |yes|E(<span class="number">4</span>.<span class="number">1</span>)</span><br><span class="line">    <span class="attribute">D</span> --&gt; F(<span class="number">4</span>.<span class="number">2</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="序列图"><a href="#序列图" class="headerlink" title="序列图"></a>序列图</h3><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    <span class="keyword">loop</span> every day</span><br><span class="line">        A<span class="function"><span class="title">lice</span>-&gt;</span>&gt;John: Hello,how are you?</span><br><span class="line">        J<span class="function"><span class="title">ohn</span>--&gt;</span>&gt;Alice: Fine,thanks!</span><br><span class="line">    end</span><br></pre></td></tr></table></figure><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat YYYY-MM-DD</span><br><span class="line">title 计划表</span><br><span class="line">section 第一阶段</span><br><span class="line">明确需求:<span class="number">2019</span><span class="number">-03</span><span class="number">-01</span>,<span class="number">10</span>d</span><br><span class="line">section 第二阶段</span><br><span class="line">开发:<span class="number">2019</span><span class="number">-03</span><span class="number">-11</span>,<span class="number">15</span>d</span><br><span class="line">section 第三阶段</span><br><span class="line">测试:<span class="number">2019</span><span class="number">-03</span><span class="number">-20</span>,<span class="number">9</span>d</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;目录&quot;&gt;&lt;a href=&quot;#目录&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h1&gt;&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;一级标题&quot;&gt;&lt;a href=&quot;#一级标题&quot; class=&quot;headerlink&quot; title=&quot;一级标题&quot;&gt;&lt;/a&gt;一级标题&lt;/h1&gt;&lt;h2 id=&quot;二级标题&quot;&gt;&lt;a href=&quot;#二级标题&quot; class=&quot;headerlink&quot; title=&quot;二级标题&quot;&gt;&lt;/a&gt;二级标题&lt;/h2&gt;</summary>
    
    
    
    
    <category term="MarkDown-Usage" scheme="http://example.com/tags/MarkDown-Usage/"/>
    
  </entry>
  
  <entry>
    <title>Vue-Component</title>
    <link href="http://example.com/2019/02/02/Vue-Component/"/>
    <id>http://example.com/2019/02/02/Vue-Component/</id>
    <published>2019-02-02T03:14:28.000Z</published>
    <updated>2020-11-13T03:59:22.220Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Component"><a href="#Component" class="headerlink" title="Component"></a>Component</h3><h4 id="关于组件命名"><a href="#关于组件命名" class="headerlink" title="关于组件命名"></a>关于组件命名</h4><p>当直接在 DOM 中使用一个组件(而不是在字符串模板或单文件组件)的时候，<br>我们强烈推荐遵循 W3C 规范中的自定义组件名 (字母全小写且必须包含一个连字符)。<br>这会帮助你避免和当前以及未来的 HTML 元素相冲突。</p><blockquote><p>命名不符合规则，会在调用组件时出现问题。</p></blockquote><a id="more"></a><h4 id="Prop"><a href="#Prop" class="headerlink" title="Prop"></a>Prop</h4><h5 id="单向数据流"><a href="#单向数据流" class="headerlink" title="单向数据流"></a>单向数据流</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>单向下行绑定，父级prop的更新会流动到子组件，反过来不行。</span><br><span class="line"><span class="number">2.</span>这意味着，在实际开发中，不可以在子组件中修改父组件传入的</span><br><span class="line">prop的值，prop为只读状态。</span><br></pre></td></tr></table></figure><blockquote><ul><li>在Js中，对象和数组是通过引用传入的，所以对于一个数组或者<br>  对象类型的prop来说，在子组件中改变将会影响到父组件的状态。</li></ul></blockquote><blockquote><ul><li>两种参考情况：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1.</span>这个 prop 用来传递一个初始值；这个子组件接下来希望将其</span><br><span class="line">作为一个本地的 prop 数据来使用。在这种情况下，最好定义一</span><br><span class="line">个本地的 data 属性并将这个 prop 用作其初始值：</span><br><span class="line"> </span><br><span class="line"> props: [<span class="string">&#x27;initialCounter&#x27;</span>],</span><br><span class="line"> data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> &#123;</span><br><span class="line">         counter: <span class="built_in">this</span>.initialCounter</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2.</span>这个 prop 以一种原始的值传入且需要进行转换。在这种情况下，</span><br><span class="line">最好使用这个 prop 的值来定义一个计算属性：</span><br><span class="line"></span><br><span class="line">props: [<span class="string">&#x27;size&#x27;</span>],</span><br><span class="line">computed: &#123;</span><br><span class="line">normalizedSize: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> <span class="built_in">this</span>.size.trim().toLowerCase()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><h5 id="prop类型"><a href="#prop类型" class="headerlink" title="prop类型"></a>prop类型</h5><ul><li>String</li><li>Number</li><li>Boolean</li><li>Array</li><li>Object</li><li>Date</li><li>Function</li><li>Symbol</li></ul><h5 id="attrs"><a href="#attrs" class="headerlink" title="$attrs"></a>$attrs</h5><ul><li>子组件定义：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        props:&#123;&#123;name&#125;&#125;,&#123;&#123;age&#125;&#125; </span><br><span class="line">        &lt;!--或者 --&gt;</span><br><span class="line">        &#123;&#123;$props[&#39;name&#39;]&#125;&#125;,&#123;&#123;$props[&#39;age&#39;]&#125;&#125;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">export default&#123;</span><br><span class="line">    name: &#39;child&#39;,</span><br><span class="line">    props: [&#39;name&#39;,&#39;age&#39;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>父组件调用<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">child</span> <span class="attr">name</span>=<span class="string">&quot;rick&quot;</span> <span class="attr">:age</span>=<span class="string">&quot;18&quot;</span> <span class="attr">gender</span>=<span class="string">&quot;male&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">child</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li>如果我们给child传props没有注册的属性，就需要使用$attrs来取了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        props:&#123;&#123;name&#125;&#125;,&#123;&#123;age&#125;&#125; </span><br><span class="line">        &lt;!--或者 --&gt;</span><br><span class="line">        &#123;&#123;$props[&#39;name&#39;]&#125;&#125;,&#123;&#123;$props[&#39;age&#39;]&#125;&#125; </span><br><span class="line"></span><br><span class="line">        attrs: &#123;&#123;$attrs[&#39;gender&#39;]&#125;&#125; </span><br><span class="line">        &lt;!--在$attrs里面只会有props没有注册的属性--&gt;</span><br><span class="line">    &lt;&#x2F;div&gt;</span><br><span class="line">&lt;&#x2F;template&gt;</span><br><span class="line"></span><br><span class="line">export default&#123;</span><br><span class="line">    props: [&#39;name&#39;,&#39;age&#39;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="Slot"><a href="#Slot" class="headerlink" title="Slot"></a>Slot</h4><ul><li><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E6%8F%92%E6%A7%BD%E5%86%85%E5%AE%B9">单个插槽</a> </li><li><a href="https://cn.vuejs.org/v2/guide/components-slots.html#%E5%85%B7%E5%90%8D%E6%8F%92%E6%A7%BD">具名插槽</a></li><li><a href="https://blog.csdn.net/weixin_40920953/article/details/80527741">作用域插槽</a></li></ul><h4 id="组件书写的模板（不使用语法糖的格式）"><a href="#组件书写的模板（不使用语法糖的格式）" class="headerlink" title="组件书写的模板（不使用语法糖的格式）"></a>组件书写的模板（不使用语法糖的格式）</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--html元素模板 双向绑定等操作--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="handlebars"><span class="xml"><span class="comment">&lt;!--可以导入其他的方法，组件等--&gt;</span></span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> XXX <span class="keyword">from</span> <span class="string">&#x27;xxx&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> ComponentE <span class="keyword">from</span> <span class="string">&#x27;@/views/components/ComponentE.vue&#x27;</span></span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> mapGetters <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="javascript">  name: <span class="string">&#x27;example&#x27;</span>,</span></span><br><span class="line">  components: &#123;</span><br><span class="line">      ComponentE</span><br><span class="line">  &#125;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    prop1: &#123;</span><br><span class="line"><span class="javascript">        type: <span class="built_in">Array</span>,</span></span><br><span class="line"><span class="javascript">        required: <span class="literal">true</span>,</span></span><br><span class="line"><span class="javascript">        <span class="function"><span class="title">default</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">return</span> []</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    ...</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">          <span class="comment">&lt;!--组件内部数据定义--&gt;</span></span></span></span><br><span class="line"><span class="javascript">          data1: <span class="string">&#x27;ExampleData&#x27;</span>,</span></span><br><span class="line">          ...</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  computed: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">  <span class="comment">&lt;!--1.可以定义组件内部的计算属性--&gt;</span></span></span></span><br><span class="line">    ...mapGetters([</span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--2.在store中的定义属性--&gt;</span></span></span></span><br><span class="line"><span class="javascript">        <span class="string">&#x27;storeData1&#x27;</span>,</span></span><br><span class="line">        ...</span><br><span class="line">    ])  </span><br><span class="line">  &#125;,</span><br><span class="line">  watch: &#123;</span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">storeData1</span>(<span class="params">val</span>)</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--1.监听store中的属性 val为新值--&gt;</span></span></span></span><br><span class="line">    &#125;,</span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--2.还可以监听组件内部的属性--&gt;</span></span></span></span><br><span class="line">  &#125;,</span><br><span class="line"><span class="javascript">  <span class="function"><span class="title">create</span>(<span class="params"></span>)</span> &#123;</span></span><br><span class="line"><span class="handlebars"><span class="xml">      <span class="comment">&lt;!--调用钩子函数--&gt;</span></span></span></span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--定义的各个方法。包括：--&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--1.组件自身的方法--&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--2.暴露给父组件的方法--&gt;</span></span></span></span><br><span class="line">    </span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--子组件使用$emit()传递事件给父组件,第一个参数为事件名，--&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--父组件接收时以此名称匹配。第二个为传递的参数。--&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--在父组件中使用此子组件时，可以以下面这种格式书写：--&gt;</span></span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    <span class="comment">&lt;!--@method=&#x27;父组件中的方法名&#x27;--&gt;</span></span></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="title">method</span>(<span class="params">param</span>)</span> &#123;</span></span><br><span class="line"><span class="javascript">        <span class="built_in">this</span>.$emit(<span class="string">&#x27;method&#x27;</span>,param)</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--自定义的CSS样式，可以配合loader使用CSS预处理语言--&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Component&quot;&gt;&lt;a href=&quot;#Component&quot; class=&quot;headerlink&quot; title=&quot;Component&quot;&gt;&lt;/a&gt;Component&lt;/h3&gt;&lt;h4 id=&quot;关于组件命名&quot;&gt;&lt;a href=&quot;#关于组件命名&quot; class=&quot;headerlink&quot; title=&quot;关于组件命名&quot;&gt;&lt;/a&gt;关于组件命名&lt;/h4&gt;&lt;p&gt;当直接在 DOM 中使用一个组件(而不是在字符串模板或单文件组件)的时候，&lt;br&gt;我们强烈推荐遵循 W3C 规范中的自定义组件名 (字母全小写且必须包含一个连字符)。&lt;br&gt;这会帮助你避免和当前以及未来的 HTML 元素相冲突。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;命名不符合规则，会在调用组件时出现问题。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>ADog</title>
    <link href="http://example.com/2019/01/31/AmDog/"/>
    <id>http://example.com/2019/01/31/AmDog/</id>
    <published>2019-01-31T06:55:03.000Z</published>
    <updated>2022-03-06T08:44:31.204Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This <span class="keyword">is</span> testing. Whatever, i wanna keep a dog. <span class="keyword">If</span> another cat, that<span class="symbol">&#x27;s</span> fantastic!</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight ada&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class</summary>
      
    
    
    
    
    <category term="随笔" scheme="http://example.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2019/01/31/hello-world/"/>
    <id>http://example.com/2019/01/31/hello-world/</id>
    <published>2019-01-31T06:55:03.000Z</published>
    <updated>2020-11-13T03:59:22.220Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><a id="more"></a><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
</feed>
